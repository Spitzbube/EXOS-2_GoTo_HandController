
msc.elf:     file format elf32-littlearm
msc.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x0000323c memsz 0x0000323c flags r-x
    LOAD off    0x00010200 vaddr 0x40000200 paddr 0x0000323c align 2**15
         filesz 0x00000000 memsz 0x00000000 flags rw-
    LOAD off    0x00010200 vaddr 0x40000200 paddr 0x40000200 align 2**15
         filesz 0x00000000 memsz 0x000002d8 flags rw-
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000323c  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  40000200  0000323c  00010200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000002d8  40000200  40000200  00010200  2**2
                  ALLOC
  3 .debug_abbrev 00001069  00000000  00000000  00010200  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000023d0  00000000  00000000  00011269  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000b6b  00000000  00000000  00013639  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  0000072c  00000000  00000000  000141a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_pubnames 0000045b  00000000  00000000  000148d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000200  00000000  00000000  00014d30  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000188  00000000  00000000  00014f30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ada  00000000  00000000  000150b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      000000ea  00000000  00000000  00015b92  2**0
                  CONTENTS, READONLY
 12 .debug_loc    00001a02  00000000  00000000  00015c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
40000200 l    d  .data	00000000 .data
40000200 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  *ABS*	00000000 .shstrtab
00000000 l    d  *ABS*	00000000 .symtab
00000000 l    d  *ABS*	00000000 .strtab
00000040 l       *ABS*	00000000 UND_STACK_SIZE
00000040 l       *ABS*	00000000 ABT_STACK_SIZE
00000040 l       *ABS*	00000000 FIQ_STACK_SIZE
00000100 l       *ABS*	00000000 IRQ_STACK_SIZE
00000400 l       *ABS*	00000000 SVC_STACK_SIZE
00000010 l       *ABS*	00000000 MODE_USR
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000080 l       *ABS*	00000000 I_BIT
00000040 l       *ABS*	00000000 F_BIT
00000000 l       .text	00000000 _vectors
00000020 l       .text	00000000 Reset_Addr
00000024 l       .text	00000000 Undef_Addr
00000028 l       .text	00000000 SWI_Addr
0000002c l       .text	00000000 PAbt_Addr
00000030 l       .text	00000000 DAbt_Addr
00000038 l       .text	00000000 FIQ_Addr
00000034 l       .text	00000000 IRQ_Addr
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 printf.c
00000158 l     F .text	00000028 printchar
00000180 l     F .text	000000c0 prints
00000240 l     F .text	00000120 printi
00000360 l     F .text	000001e8 print
00000000 l    df *ABS*	00000000 console.c
00000000 l    df *ABS*	00000000 main_msc.c
0000295c l     O .text	00000071 abDescriptors
40000200 l       .bss	00000000 abClassReqData
00000718 l     F .text	000000ac HandleClassRequest
00000000 l    df *ABS*	00000000 msc_bot.c
000007c4 l     F .text	00000030 BOTStall
4000020c l       .bss	00000000 CBW
000007f4 l     F .text	00000074 SendCSW
40000204 l       .bss	00000000 dwTransferSize
4000022c l       .bss	00000000 CSW
4000023c l       .bss	00000000 eState
00000868 l     F .text	000000c0 HandleDataIn
40000240 l       .bss	00000000 pbData
40000208 l       .bss	00000000 dwOffset
000029d0 l     O .text	0000000d __FUNCTION__.1785
000029e0 l     O .text	0000000e __FUNCTION__.1744
00000000 l    df *ABS*	00000000 msc_scsi.c
40000244 l       .bss	00000000 dwSense
000029f0 l     O .text	00000012 abSense
40000248 l       .bss	00000000 abBlockBuf
00002a02 l     O .text	00000024 abInquiry
00002a26 l     O .text	00000008 aiCDBLen.1573
00000000 l    df *ABS*	00000000 blockdev_sd.c
000011dc l     F .text	0000002c Resp8b
00001208 l     F .text	00000058 Command
000012c0 l     F .text	000000a8 Resp8bError
00000000 l    df *ABS*	00000000 lpc2000_spi.c
00000000 l    df *ABS*	00000000 usbhw_lpc.c
40000448 l       .bss	00000000 _pfnFrameHandler
4000044c l       .bss	00000000 _pfnDevIntHandler
00002a30 l     O .text	0000001a __FUNCTION__.1405
40000450 l       .bss	00000000 _apfnEPIntHandlers
00001990 l     F .text	0000003c USBHwCmd
00001af0 l     F .text	00000044 USBHwCmdWrite
00001d18 l     F .text	00000048 USBHwCmdRead
00000000 l    df *ABS*	00000000 usbcontrol.c
00002a4c l     O .text	0000001a __FUNCTION__.1407
400004a0 l       .bss	00000000 apbDataStore
40000490 l       .bss	00000000 apfnReqHandlers
00001f70 l     F .text	00000048 _HandleRequest
00001fb8 l     F .text	00000060 StallControlPipe
400004b0 l       .bss	00000000 Setup
00002018 l     F .text	0000004c DataIn
400004bc l       .bss	00000000 iResidue
400004b8 l       .bss	00000000 pbData
400004c0 l       .bss	00000000 iLen
00002a68 l     O .text	00000019 __FUNCTION__.1369
00000000 l    df *ABS*	00000000 usbstdreq.c
400004cc l       .bss	00000000 pabDescrip
400004c4 l       .bss	00000000 pfnHandleCustomReq
00002a98 l     O .text	00000011 __FUNCTION__.1339
400004c8 l       .bss	00000000 bConfiguration
00002a84 l     O .text	00000014 __FUNCTION__.1376
00000000 l    df *ABS*	00000000 usbinit.c
000026c8 l     F .text	00000014 HandleUsbReset
400004d0 l       .bss	00000000 abStdReqData
00000000 l    df *ABS*	00000000 memcpy.c
00000600 g     F .text	0000003c putchar
00002254 g     F .text	000000d0 USBGetDescriptor
00001368 g     F .text	00000090 BlockDevRead
000019cc g     F .text	000000a0 USBHwEPRead
00002244 g     F .text	00000010 USBRegisterCustomReqHandler
00000580 g     F .text	00000034 printf
00002234 g     F .text	00000010 USBRegisterDescriptors
000005b4 g     F .text	0000004c ConsoleInit
000013f8 g     F .text	000001e4 BlockDevInit
000000e4 g     F .text	00000004 UNDEF_Routine
00001d60 g     F .text	00000164 USBHwISR
000016c8 g     F .text	0000001c SPISetSpeed
0000323c g       .text	00000000 _etext
000017d8 g     F .text	000000c0 SPIInit
000028bc g     F .text	000000a0 memcpy
00000658 g     F .text	00000034 puts
00000928 g     F .text	000000c8 MSCBotBulkIn
000026dc g     F .text	000000f8 __udivsi3
40000200 g       .bss	00000000 _bss_start
00001a6c g     F .text	00000084 USBHwEPWrite
000000e0 g     F .text	00000004 SWI_Routine
00000000 g       .text	00000000 _startup
00000d48 g     F .text	00000234 SCSIHandleData
400004d8 g       *ABS*	00000000 _bss_end
00001cbc g     F .text	0000005c USBHwEPConfig
00000040 g       .text	00000000 Reset_Handler
00002064 g     F .text	000001d0 USBHandleControlTransfer
00001cac g     F .text	00000010 USBHwSetAddress
000000dc g     F .text	00000004 FIQ_Routine
000027ec g     F .text	000000cc __umodsi3
00001ee4 g     F .text	0000008c USBRegisterRequestHandler
0000177c g     F .text	0000005c SPIRecvN
0000265c g     F .text	0000006c USBInit
00001c9c g     F .text	00000010 USBHwConnect
000016e4 g     F .text	00000044 SPISend
000028b8 g     F .text	00000004 __aeabi_ldiv0
00000f7c g     F .text	00000260 SCSIHandleCmd
00001b44 g     F .text	00000020 USBHwEPStall
0000068c g     F .text	0000008c main
00000d08 g     F .text	0000002c MSCBotReset
000028b8 g     F .text	00000004 __div0
000026dc g     F .text	00000000 __aeabi_uidiv
0000063c g     F .text	0000001c getchar
00001728 g     F .text	00000054 SPISendN
000015dc g     F .text	000000ec BlockDevGetSize
40007edc g       *ABS*	00000000 _stack_end
000018c4 g     F .text	0000002c USBHwRegisterDevIntHandler
000018f0 g     F .text	000000a0 USBHwRegisterEPIntHandler
00000548 g     F .text	00000038 sprintf
000000d8 g     F .text	00000004 IRQ_Routine
00002324 g     F .text	00000338 USBHandleStandardRequest
40000200 g       .data	00000000 _data
00001b34 g     F .text	00000010 USBHwConfigDevice
00001260 g     F .text	00000060 BlockDevWrite
000009f0 g     F .text	00000318 MSCBotBulkOut
000027d4 g     F .text	00000018 __aeabi_uidivmod
40000200 g       .data	00000000 _edata
400004d8 g       *ABS*	00000000 _end
00001b64 g     F .text	0000000c USBHwNakIntEnable
00001b70 g     F .text	0000012c USBHwInit
00001898 g     F .text	0000002c USBHwRegisterFrameHandler
000028b8 g     F .text	00000004 __aeabi_idiv0
00001ec4 g     F .text	00000020 USBHwEPGetStatus
000000e8 g     F .text	00000070 Initialize
00000d34 g     F .text	00000014 SCSIReset


