
serial.elf:     file format elf32-littlearm
serial.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00001cd0 memsz 0x00001cd0 flags r-x
    LOAD off    0x00010200 vaddr 0x40000200 paddr 0x00001cd0 align 2**15
         filesz 0x00000000 memsz 0x00000000 flags rw-
    LOAD off    0x00010200 vaddr 0x40000200 paddr 0x40000200 align 2**15
         filesz 0x00000000 memsz 0x000001a8 flags rw-
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001cd0  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  40000200  00001cd0  00010200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001a8  40000200  40000200  00010200  2**2
                  ALLOC
  3 .debug_abbrev 00000c34  00000000  00000000  00010200  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001c7f  00000000  00000000  00010e34  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000082e  00000000  00000000  00012ab3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000600  00000000  00000000  000132e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_pubnames 000003f7  00000000  00000000  000138e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 000001a0  00000000  00000000  00013ce0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000128  00000000  00000000  00013e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000801  00000000  00000000  00013fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      000000b4  00000000  00000000  000147a9  2**0
                  CONTENTS, READONLY
 12 .debug_loc    00001264  00000000  00000000  0001485d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
40000200 l    d  .data	00000000 .data
40000200 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  *ABS*	00000000 .shstrtab
00000000 l    d  *ABS*	00000000 .symtab
00000000 l    d  *ABS*	00000000 .strtab
00000040 l       *ABS*	00000000 UND_STACK_SIZE
00000040 l       *ABS*	00000000 ABT_STACK_SIZE
00000040 l       *ABS*	00000000 FIQ_STACK_SIZE
00000100 l       *ABS*	00000000 IRQ_STACK_SIZE
00000400 l       *ABS*	00000000 SVC_STACK_SIZE
00000010 l       *ABS*	00000000 MODE_USR
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000080 l       *ABS*	00000000 I_BIT
00000040 l       *ABS*	00000000 F_BIT
00000000 l       .text	00000000 _vectors
00000020 l       .text	00000000 Reset_Addr
00000024 l       .text	00000000 Undef_Addr
00000028 l       .text	00000000 SWI_Addr
0000002c l       .text	00000000 PAbt_Addr
00000030 l       .text	00000000 DAbt_Addr
00000038 l       .text	00000000 FIQ_Addr
00000034 l       .text	00000000 IRQ_Addr
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 printf.c
00000158 l     F .text	00000028 printchar
00000180 l     F .text	000000c0 prints
00000240 l     F .text	00000120 printi
00000360 l     F .text	000001e8 print
00000000 l    df *ABS*	00000000 console.c
00000000 l    df *ABS*	00000000 main_serial.c
0000068c l     F .text	0000001c USBIntHandler
4000030c l       .bss	00000000 rxfifo
40000300 l       .bss	00000000 txfifo
40000200 l       .bss	00000000 txdata
40000280 l       .bss	00000000 rxdata
00001980 l     O .text	0000008e abDescriptors
00000000 l    df *ABS*	00000000 serial_fifo.c
00000000 l    df *ABS*	00000000 armVIC.c
00000000 l    df *ABS*	00000000 usbhw_lpc.c
40000318 l       .bss	00000000 _pfnFrameHandler
4000031c l       .bss	00000000 _pfnDevIntHandler
00001a10 l     O .text	0000001a __FUNCTION__.1405
40000320 l       .bss	00000000 _apfnEPIntHandlers
00000a54 l     F .text	0000003c USBHwCmd
00000bb4 l     F .text	00000044 USBHwCmdWrite
00000ddc l     F .text	00000048 USBHwCmdRead
00000000 l    df *ABS*	00000000 usbstdreq.c
40000368 l       .bss	00000000 pabDescrip
40000360 l       .bss	00000000 pfnHandleCustomReq
00001a40 l     O .text	00000011 __FUNCTION__.1339
40000364 l       .bss	00000000 bConfiguration
00001a2c l     O .text	00000014 __FUNCTION__.1376
00000000 l    df *ABS*	00000000 usbinit.c
0000143c l     F .text	00000014 HandleUsbReset
4000036c l       .bss	00000000 abStdReqData
00000000 l    df *ABS*	00000000 usbcontrol.c
00001a54 l     O .text	0000001a __FUNCTION__.1407
40000384 l       .bss	00000000 apbDataStore
40000374 l       .bss	00000000 apfnReqHandlers
000014dc l     F .text	00000048 _HandleRequest
00001524 l     F .text	00000060 StallControlPipe
40000394 l       .bss	00000000 Setup
00001584 l     F .text	0000004c DataIn
400003a0 l       .bss	00000000 iResidue
4000039c l       .bss	00000000 pbData
400003a4 l       .bss	00000000 iLen
00001a70 l     O .text	00000019 __FUNCTION__.1369
00000600 g     F .text	0000003c putchar
00000fc8 g     F .text	000000d0 USBGetDescriptor
000008a4 g     F .text	00000030 fifo_avail
00000a90 g     F .text	000000a0 USBHwEPRead
00000fb8 g     F .text	00000010 USBRegisterCustomReqHandler
00000580 g     F .text	00000034 printf
00000fa8 g     F .text	00000010 USBRegisterDescriptors
000005b4 g     F .text	0000004c ConsoleInit
000006d4 g     F .text	00000028 VCOM_putchar
000000e4 g     F .text	00000004 UNDEF_Routine
00000e24 g     F .text	00000164 USBHwISR
00001cd0 g       .text	00000000 _etext
000007fc g     F .text	00000054 fifo_put
000008e4 g     F .text	0000001c restoreIRQ
00000658 g     F .text	00000034 puts
000017a0 g     F .text	000000f8 __udivsi3
000007e8 g     F .text	00000014 fifo_init
0000092c g     F .text	00000010 enableFIQ
40000200 g       .bss	00000000 _bss_start
00000b30 g     F .text	00000084 USBHwEPWrite
000000e0 g     F .text	00000004 SWI_Routine
00000000 g       .text	00000000 _startup
400003a8 g       *ABS*	00000000 _bss_end
00000d80 g     F .text	0000005c USBHwEPConfig
00000040 g       .text	00000000 Reset_Handler
000015d0 g     F .text	000001d0 USBHandleControlTransfer
00000d70 g     F .text	00000010 USBHwSetAddress
0000091c g     F .text	00000010 disableFIQ
000000dc g     F .text	00000004 FIQ_Routine
000018b0 g     F .text	000000cc __umodsi3
00001450 g     F .text	0000008c USBRegisterRequestHandler
000013d0 g     F .text	0000006c USBInit
00000d60 g     F .text	00000010 USBHwConnect
0000197c g     F .text	00000004 __aeabi_ldiv0
00000c08 g     F .text	00000020 USBHwEPStall
0000072c g     F .text	000000bc main
0000197c g     F .text	00000004 __div0
000017a0 g     F .text	00000000 __aeabi_uidiv
0000063c g     F .text	0000001c getchar
40007edc g       *ABS*	00000000 _stack_end
00000850 g     F .text	00000054 fifo_get
00000988 g     F .text	0000002c USBHwRegisterDevIntHandler
000009b4 g     F .text	000000a0 USBHwRegisterEPIntHandler
00000548 g     F .text	00000038 sprintf
000000d8 g     F .text	00000004 IRQ_Routine
00001098 g     F .text	00000338 USBHandleStandardRequest
40000200 g       .data	00000000 _data
0000094c g     F .text	00000010 enableIRQ
00000bf8 g     F .text	00000010 USBHwConfigDevice
00000900 g     F .text	0000001c restoreFIQ
00001898 g     F .text	00000018 __aeabi_uidivmod
40000200 g       .data	00000000 _edata
400003a8 g       *ABS*	00000000 _end
00000c28 g     F .text	0000000c USBHwNakIntEnable
000006a8 g     F .text	0000002c VCOM_getchar
00000c34 g     F .text	0000012c USBHwInit
0000095c g     F .text	0000002c USBHwRegisterFrameHandler
0000197c g     F .text	00000004 __aeabi_idiv0
00000f88 g     F .text	00000020 USBHwEPGetStatus
000008d4 g     F .text	00000010 fifo_free
0000093c g     F .text	00000010 disableIRQ
000000e8 g     F .text	00000070 Initialize
000006fc g     F .text	00000030 VCOM_init


